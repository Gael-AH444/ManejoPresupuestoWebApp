@model PaginacionRespuestaVM
@{
	var plantillaLink = string.Concat(Model.BaseURL, "?pagina={0}&recordsPorPagina={1}");
	var activarBotonAnterior = Model.Pagina > 1;
	var activarBotonSiguiente = Model.Pagina < Model.CantidadTotalDePaginas;
}


<nav>
	<ul class="pagination">

		@* Pagina anterior *@
		<li class="page-item @(activarBotonAnterior ? null : "disabled")">
			@if (activarBotonAnterior) @* Si es verdadero se habilita el boton de anterior *@
			{
				<a class="page-link"
				   href="@string.Format(plantillaLink, Model.Pagina - 1, Model.RecordsPorPagina)">
					<i class="bi bi-caret-left" style="color: red;"></i>
				</a>
			}
			else
			{
				<span class="page-link"><i class="bi bi-caret-left" style="color: lightslategray;"></i></span>
			}
		</li>

		@* Numeros de las paginas *@
		@for (var pagina = 1; pagina <= Model.CantidadTotalDePaginas; pagina++)
		{
			<li class="page-item @(pagina == Model.Pagina ? "active" : null)">
				<a class="page-link" href="@string.Format(plantillaLink, pagina, Model.RecordsPorPagina)">
					@pagina
				</a>
			</li>
		}

		@* Pagina siguiente *@
		<li class="page-item @(activarBotonSiguiente ? null : "disabled")">
			@if (activarBotonSiguiente) @* Si es verdadero se habilita el boton de anterior *@
			{
				<a class="page-link"
				   href="@string.Format(plantillaLink, Model.Pagina + 1, Model.RecordsPorPagina)">
					<i class="bi bi-caret-right" style="color: red;"></i>
				</a>
			}
			else
			{
				<span class="page-link"><i class="bi bi-caret-right" style="color: lightslategray;"></i></span>
			}
		</li>
	</ul>
</nav>